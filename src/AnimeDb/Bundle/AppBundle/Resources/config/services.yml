services:
    anime_db.pagination:
        class: AnimeDb\Bundle\AppBundle\Service\Pagination
    anime_db.cache_clearer:
        class: AnimeDb\Bundle\AppBundle\Service\CacheClearer
        arguments: [ @kernel, %kernel.root_dir% ]

    anime_db.assets:
        class: AnimeDb\Bundle\AppBundle\Service\Assets
    anime_db.widgets:
        class: AnimeDb\Bundle\AppBundle\Service\WidgetsContainer
        arguments: [@event_dispatcher]

    # Twig extension
    anime_db.app_twig_extension:
        class: AnimeDb\Bundle\AppBundle\Service\TwigExtension
        arguments: [@router, @fragment.handler, @anime_db.widgets, %hinclude%]
        tags:
            - { name: twig.extension }

    # Kernel request listener
    anime_db.listener.request:
        class: AnimeDb\Bundle\AppBundle\Event\Listener\Request
        tags: [{ name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: -255 }]
        arguments: [ @gedmo.listener.translatable, @validator, @service_container, @cache_clearer, %kernel.root_dir% ]

    # Console listener
    anime_db.listener.console:
        class: AnimeDb\Bundle\AppBundle\Event\Listener\Console
        tags: [{ name: kernel.event_listener, event: console.command, method: onConsoleCommand }]
        arguments: [ @gedmo.listener.translatable, @translator, %locale% ]

    gedmo.listener.translatable:
        class: Gedmo\Translatable\TranslatableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
            - [ setDefaultLocale, [ "en" ] ]
            - [ setTranslationFallback, [ true ] ]

    anime_db.listener.project:
        class: AnimeDb\Bundle\AppBundle\Event\Listener\Project
        arguments: [ @doctrine.orm.entity_manager, @cache_clearer, %kernel.root_dir% ]
        tags: 
            - { name: kernel.event_listener, event: anime_db.project.updated, method: onUpdatedProposeUpdateTask }
            - { name: kernel.event_listener, event: anime_db.project.updated, method: onUpdatedSaveLastUpdateDate }

    anime_db.listener.package:
        class: AnimeDb\Bundle\AppBundle\Event\Listener\Package
        arguments: [ @doctrine.orm.entity_manager ]
        tags:
            - { name: kernel.event_listener, event: anime_db.package.updated, method: onUpdated }
            - { name: kernel.event_listener, event: anime_db.package.installed, method: onInstalled }
            - { name: kernel.event_listener, event: anime_db.package.removed, method: onRemoved }

    anime_db.form.type_extension.help:
        class: AnimeDb\Bundle\AppBundle\Form\Type\Help
        tags:
          - { name: "form.type_extension", alias: "form" }
